name: Build
on:
  push:
    branches:
      - main # or the name of your main branch
  pull_request:
    branches: 
      - main
jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# name: SonarCloud analysis

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#   workflow_dispatch:

# permissions:
#   pull-requests: read # allows SonarCloud to decorate PRs with analysis results

# jobs:
#   Analysis:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Analyze with SonarCloud

#         # You can pin the exact commit or the version.
#         # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
#         uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
#         with:
#           # Additional arguments for the sonarcloud scanner
#           args:
#             # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
#             # mandatory
#             -Dsonar.projectKey=
#             -Dsonar.organization=
#             # Comma-separated paths to directories containing main source files.
#             #-Dsonar.sources= # optional, default is project base directory
#             # When you need the analysis to take place in a directory other than the one from which it was launched
#             #-Dsonar.projectBaseDir= # optional, default is .
#             # Comma-separated paths to directories containing test source files.
#             #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
#             # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
#             #-Dsonar.verbose= # optional, default is false